source("~/Desktop/NS_Assignment_3/assignment.r")
source("~/Desktop/NS_Assignment_3/assignment.r")
source("~/Desktop/NS_Assignment_3/assignment.r")
source("~/Desktop/NS_Assignment_3/assignment.r")
source("~/Desktop/NS_Assignment_3/assignment.r")
source("~/Desktop/NS_Assignment_3/assignment.r")
source("~/Desktop/NS_Assignment_3/assignment.r")
source("~/Desktop/NS_Assignment_3/assignment.r")
source("~/Desktop/NS_Assignment_3/assignment.r")
plot(graph, vertex.size=5, edge.arrow.size=0.1,
vertex.color=V(graph)$practice, layout=layout_with_grid(graph))
plot(graph, vertex.size=5, edge.arrow.size=0.1,
vertex.color=V(graph)$practice, layout=layout_as_grid(graph))
plot(graph, vertex.size=5, edge.arrow.size=0.1,
vertex.color=V(graph)$practice, layout=layout_on_grid(graph))
source("~/Desktop/NS_Assignment_3/assignment.r")
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$practice)
plot(graph, vertex.size=5, edge.arrow.size=0.1,
vertex.color=V(graph)$practice, layout=layout_nicely(graph))
#Plot with a different layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=V(graph)$practice, layout=layout_nicely(graph))
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$status)
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=V(graph)$status, layout=layout_nicely(graph))
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status, "lightblue", "salmon"), layout=layout_nicely(graph))
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status==1, "lightblue", "salmon"), layout=layout_nicely(graph))
#Plot showing status groups
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$status)
#Plot with a different layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status==1, "violet", "salmon"), layout=layout_nicely(graph))
#Plot with a different layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status==1, "green", "salmon"), layout=layout_nicely(graph))
#Plot with a different layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status==1, "darkgreen", "salmon"), layout=layout_nicely(graph))
#Plot with a different layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status==1, "lightblue", "salmon"), layout=layout_nicely(graph))
#Plot with a different layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=V(graph)$practice, layout=layout_with_lgl(graph))
#Plot with a different layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$practice==1, "yellow", "violet"), layout=layout_with_lgl(graph))
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg)
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 50)
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg)
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=50)
out_degree_hist = hist(out_deg,breaks=20)
out_degree_hist = hist(out_deg,breaks=30)
plot(in_deg, out_deg)
plot(in_deg, out_deg, col="black")
plot(in_deg, out_deg, col="salmon")
plot(in_deg, out_deg, col="darkblue")
plot(in_deg, out_deg, col="darkblue",fill="black")
plot(in_deg, out_deg)
nodes[,10] <- indegree
#Question 5. Attach the two degree vectors as the last two columns.
nodes[,10] <- in_deg
nodes[,11] <- out_deg
colnames(nodes)[10:11] <-c("indegree","outdegree")
print(head(nodes))
# 5 (a) Draw scatterplots of each degree type against the seniority
plot(nodes$Seniority, nodes$indegree)
plot(nodes$Seniority, nodes$outdegree)
source("~/Desktop/NS_Assignment_3/assignment.r")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 50, labels=TRUE)
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 50, labels=TRUE,color="lightblue")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 50, labels=TRUE,col="lightblue")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 50, labels=TRUE,col="salmon")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 50, labels=TRUE,col="pink")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 50, labels=TRUE,col="pink",main = "")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 50, labels=TRUE,col="pink")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 40, labels=TRUE,col="pink")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 30, labels=TRUE,col="pink")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 20, labels=TRUE,col="pink")
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 30, labels=TRUE,col="pink")
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=30, labels=TRUE,col="cyan")
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=30, labels=TRUE,col="limegreen")
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=30, labels=TRUE,col="violet")
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=30, labels=TRUE,col="purple")
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=30, labels=TRUE,col="blue")
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=30, labels=TRUE,col="skyblue")
cor(deg.in, deg.out)
cor(in_deg, out_deg)
options(digits=3)
cor(in_deg, out_deg)
cor(nodes$Seniority, nodes$indegree)
cor(nodes$Seniority, nodes$outdegree)
aggregate(indegree ~ Status, data = nodes, mean)
aggregate(outdegree ~ Status, data = nodes, mean)
boxplot(nodes$Status, nodes$outdegree)
boxplot(nodes$Status, nodes$indegree)
boxplot(nodes$Status, nodes$outdegree, breaks=30)
boxplot(nodes$Status, nodes$indegree, breaks=30)
boxplot(nodes$Status, nodes$outdegree, breaks=50)
boxplot(nodes$Status, nodes$indegree, breaks=50)
boxplot(nodes$Status, nodes$outdegree, log="x")
boxplot(nodes$Status, nodes$outdegree, log="y")
boxplot(nodes$Status, nodes$outdegree, log="x")
boxplot(nodes$Status, nodes$indegree,  log="x")
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.25)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.5)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,at = 1:3 - 0.2)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,at = 2:3 - 0.2)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,ylim = c(0, 20))
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,ylim = c(0, 35))
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,ylim = c(0, 30))
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,ylim = c(0, 30), horizontal=TRUE)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,ylim = c(0, 30), horizontal=TRUE)
boxplot(nodes$Status, nodes$indegree)
boxplot(nodes$Status, nodes$indegree, boxwex = 0.3)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
aggregate(indegree ~ Status, data = nodes, mean)
aggregate(outdegree ~ Status, data = nodes, mean)
boxplot(nodes$Status, nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
boxplot(nodes$Status, nodes$indegree, boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
aggregate(indegree ~ Practice, data = nodes, mean) # Status 1: 17.69, 2: 7.29
aggregate(outdegree ~ Practice, data = nodes, mean)
boxplot(nodes$Practice, nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
boxplot(nodes$Practice, nodes$indegree, boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
boxplot(nodes$Practice, nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
boxplot(nodes$Practice, nodes$indegree, boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
plot(factor(nodes$Practice), nodes$outdegree)
plot(nodes$Seniority, nodes$indegree)
plot(nodes$Practice, nodes$outdegree)
plot(factor(nodes$Practice), nodes$outdegree)
boxplot(factor(nodes$Practice), nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
plot(factor(nodes$Practice), nodes$outdegree)
plot(factor(nodes$Practice), nodes$outdegree, col = "orange",
border = "brown")
plot(factor(nodes$Practice), nodes$outdegree, col = "orange",boxwex = 0.3,
border = "brown")
plot(factor(nodes$Practice), nodes$indegree, col = "orange",boxwex = 0.3,
border = "brown")
horizontal = TRUE)
boxplot(nodes$Status, nodes$indegree, boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
boxplot(factor(nodes$Status), nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
plot(factor(nodes$Status), nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
plot(factor(nodes$Status), nodes$indegree, boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
plot(factor(nodes$Status), nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown")
plot(factor(nodes$Status), nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
print(head(nodes))
eigen.cent = eigen_centrality(graph)
nodes[,12] = eigen.cent$vector
print(head(nodes))
colnames(nodes)[12] <-c("Eigen value")
print(head(nodes))
eigen.cent = eigen_centrality(graph)
nodes[,12] = eigen.cent$vector
colnames(nodes)[12] <-c("Eigen-value")
print(head(nodes))
print(nodes[,1][which(nodes$EigenCent > .8)])
eigen.cent = eigen_centrality(graph)
nodes[,12] = eigen.cent$vector
colnames(nodes)[12] <-c("Eigen-value")
# 6(a)
print(head(nodes))
# 6(b)
print(nodes[,1][which(nodes$Eigen-value > .8)])
# Q6: Compute the eigenvector centrality scores for the vertices and store the values in an igraph object called eigen.cent
eigen.cent = eigen_centrality(graph)
nodes[,12] = eigen.cent$vector
colnames(nodes)[12] <-c("EigenValue")
# 6(a)
print(head(nodes))
# 6(b)
print(nodes[,1][which(nodes$EigenValue > .8)])
print(nodes[,1][which(nodes$EigenValue > .9)])
nodes$EigenValue
print(nodes[,1][which(nodes$EigenValue ==1)])
plot(nodes$Status, nodes$EigenCent)
plot(factor(nodes$Status), nodes$EigenCent)
plot(factor(nodes$Status), nodes$EigenValue)
plot(factor(nodes$Practice), nodes$outdegree, col = "orange",boxwex = 0.3,
border = "brown")
plot(factor(nodes$Status), nodes$EigenValue, col = "orange",boxwex = 0.3,
border = "brown")
plot(factor(nodes$Status), nodes$EigenValue, col = "orange",boxwex = 0.3,
border = "brown", horizontal=TRUE)
cor(nodes$Status, nodes$EigenValue)
cor(factor(nodes$Status), nodes$EigenValue) #Correlation: -0.498
cor(nodes$Seniority, nodes$EigenValue)
plot(nodes$Seniority, nodes$EigenValue)
plot(nodes$Status, nodes$EigenValue)
cor(nodes$Status, nodes$EigenValue)
plot(factor(nodes$Status), nodes$EigenValue)
plot(factor(nodes$Status), nodes$EigenValue, , col = "orange",boxwex = 0.3,
border = "brown")
plot(factor(nodes$Status), nodes$EigenValue, , col = "orange",boxwex = 0.3,
border = "brown", horizontal=TRUE)
cor(nodes$Status, nodes$EigenValue)
plot(factor(nodes$Practice), nodes$EigenValue, col = "orange",boxwex = 0.3,
border = "brown", horizontal=TRUE)
cor(nodes$Practice, nodes$EigenValue) #Correlation: -0.498
table(nodes$Status)
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$status)
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status==1, "lightblue", "salmon"), layout=layout_nicely(graph))
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$practice)
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$practice==1, "yellow", "violet"), layout=layout_with_lgl(graph))
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$status)
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$practice)
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status==1, "lightblue", "salmon"), layout=layout_nicely(graph))
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$practice==1, "yellow", "violet"), layout=layout_with_lgl(graph))
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 30, labels=TRUE,col="pink")
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=30, labels=TRUE,col="skyblue")
cor(in_deg, out_deg)  #Correlation: 0.14
plot(in_deg, out_deg)
nodes[,10] <- in_deg
nodes[,11] <- out_deg
colnames(nodes)[10:11] <-c("indegree","outdegree")
print(head(nodes))
print(head(nodes,5))
library(igraph)
options(digits=3)
advice <- matrix(scan("Advice.txt"),ncol=71,nrow=71,byrow=T)
nodes <- read.csv("Lawyers.csv", header=T)
head(nodes)
#Creating a graph object from the adjacency matrix
graph <- graph_from_adjacency_matrix(advice, mode = "directed")
#Question 1: Lawyer groups
table(nodes$Status) #36 Partners and 35 Associates
table(nodes$Gender) # 53 Men and 18 Women
table(nodes$Practice) #41 Litigation and 30 Corporate
#Information about the vertices may be added to a graph object as a vertex attribute.
V(graph)$status <- nodes$Status
V(graph)$practice <- nodes$Practice
#Plot showing status groups
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$status)
#Change arrow size, vertex color and layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$status==1, "lightblue", "salmon"), layout=layout_nicely(graph))
#Plot showing practice types
plot(graph, vertex.size=5, edge.arrow.size=0.5,
vertex.color=V(graph)$practice)
#Change arrow size, vertex color and layout
plot(graph, vertex.size=5, edge.arrow.size=0.18,
vertex.color=ifelse(V(graph)$practice==1, "yellow", "violet"), layout=layout_with_lgl(graph))
#Question 3: Compute the in-degrees and out-degrees of the vertices.
# Make histograms of the two vectors to see the variation
in_deg <- degree(graph, mode = "in")
in_degree_hist = hist(in_deg,breaks = 30, labels=TRUE,col="pink")
out_deg <- degree(graph, mode = "out")
out_degree_hist = hist(out_deg,breaks=30, labels=TRUE,col="skyblue")
#Question 4. Create a scatterplot between these two types of degrees and
# explain what this plot tells you. Compute the correlation between the in degree and out
# degree and use its value to explain the pattern that you see in the scatterplot.
plot(in_deg, out_deg)
cor(in_deg, out_deg)  #Correlation: 0.14
#Question 5. Attach the two degree vectors as the last two columns.
nodes[,10] <- in_deg
nodes[,11] <- out_deg
colnames(nodes)[10:11] <-c("indegree","outdegree")
print(head(nodes,5))
plot(nodes$Seniority, nodes$indegree)
plot(nodes$Seniority, nodes$outdegree)
aggregate(indegree ~ Status, data = nodes, mean) # Status 1: 17.69, 2: 7.29
aggregate(outdegree ~ Status, data = nodes, mean) #Status 1: 12.6, 2: 12.5
cor(nodes$Status,nodes$indegree)
cor(nodes$Status,nodes$outdegree)
plot(factor(nodes$Status), nodes$outdegree,boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
plot(factor(nodes$Status), nodes$indegree, boxwex = 0.3,col = "orange",
border = "brown",
horizontal = TRUE)
aggregate(indegree ~ Practice, data = nodes, mean) # Practice 1: 13.3, 2: 11.6
aggregate(outdegree ~ Practice, data = nodes, mean) # Practice 1: 12.8, 2: 12.2
plot(factor(nodes$Practice), nodes$outdegree, col = "orange",boxwex = 0.3,border = "brown")
plot(factor(nodes$Practice), nodes$outdegree, col = "orange",boxwex = 0.3,border = "brown",horizontal = TRUE)
plot(factor(nodes$Practice), nodes$indegree, col = "orange",boxwex = 0.3,border = "brown",horizontal = TRUE)
plot(factor(nodes$Practice), nodes$indegree, col = "orange",boxwex = 0.3,border = "brown",horizontal = TRUE, breaks=80)
print(nodes[,1][which(nodes$EigenValue > .8)])
# Q6: Compute the eigenvector centrality scores for the vertices and store the values in an igraph object called eigen.cent
eigen.cent = eigen_centrality(graph)
nodes[,12] = eigen.cent$vector
colnames(nodes)[12] <-c("EigenValue")
# 6(a)
print(head(nodes,5))
# 6(b)
print(nodes[,1][which(nodes$EigenValue > .8)])
print(nodes[,1][which(nodes$EigenValue ==1)])
# 6(c)
plot(nodes$Seniority, nodes$EigenValue)
cor(nodes$Seniority, nodes$EigenValue) #Correlation: -0.451
print(nodes[,1][which(nodes$EigenValue ==1)])
plot(factor(nodes$Status), nodes$EigenValue, col = "orange",boxwex = 0.3,
border = "brown", horizontal=TRUE)
plot(factor(nodes$Status), nodes$EigenValue, col = "orange",boxwex = 0.3,
border = "brown", horizontal=TRUE)
plot(nodes$Seniority, nodes$EigenValue)
plot(factor(nodes$Status), nodes$EigenValue, col = "orange",boxwex = 0.3,
border = "brown", horizontal=TRUE)
aggregate(EigenValue ~ Status, data = nodes, mean)
plot(factor(nodes$Status), nodes$EigenValue, col = "orange",boxwex = 0.3,
border = "brown", horizontal=TRUE)
aggregate(EigenValue ~ Practice, data = nodes, mean)
plot(factor(nodes$Practice), nodes$EigenValue, col = "orange",boxwex = 0.3,
border = "brown", horizontal=TRUE)
aggregate(EigenValue ~ Practice, data = nodes, mean)
